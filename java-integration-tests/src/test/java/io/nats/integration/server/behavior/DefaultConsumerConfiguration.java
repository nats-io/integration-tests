/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package io.nats.integration.server.behavior;

import io.nats.client.api.AckPolicy;
import io.nats.client.api.ConsumerConfiguration;
import io.nats.client.api.DeliverPolicy;
import io.nats.client.api.ReplayPolicy;
import io.nats.integration.utils.JetStreamTestBase;
import io.nats.integration.utils.JetStreamTestHelper;
import org.junit.jupiter.api.Test;

import java.time.Duration;

import static org.junit.jupiter.api.Assertions.assertEquals;

class DefaultConsumerConfiguration extends JetStreamTestBase {

    /* {    "durable_name": "durable",
            "deliver_policy": "all",
            "ack_policy": "explicit",
            "ack_wait": 30000000000,
            "max_deliver": -1,
            "replay_policy": "instant",
            "max_waiting": 512, <-- max pull waiting
            "max_ack_pending": 20000 }
     */

    @Test
    public void testDefaultConsumerConfiguration() throws Exception {
        runInJsServer(nc -> {
            JetStreamTestHelper h = createTestMemoryStream(nc);

            ConsumerConfiguration cc =
                ConsumerConfiguration.builder()
                    .durable("dccdur").build();
            cc = h.jsm.addOrUpdateConsumer(h.streamName, cc).getConsumerConfiguration();
            assertEquals("dccdur", cc.getDurable());
            assertEquals(DeliverPolicy.All, cc.getDeliverPolicy());
            assertEquals(AckPolicy.Explicit, cc.getAckPolicy());
            assertEquals(Duration.ofSeconds(30), cc.getAckWait());
            assertEquals(-1, cc.getMaxDeliver());
            assertEquals(ReplayPolicy.Instant, cc.getReplayPolicy());
            assertEquals(512, cc.getMaxPullWaiting());
            assertEquals(20000, cc.getMaxAckPending());
        });
    }
}