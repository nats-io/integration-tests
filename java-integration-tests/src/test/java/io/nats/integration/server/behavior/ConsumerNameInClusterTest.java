/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package io.nats.integration.server.behavior;

import io.nats.client.Connection;
import io.nats.client.JetStreamApiException;
import io.nats.client.JetStreamSubscription;
import io.nats.client.PullSubscribeOptions;
import io.nats.client.api.ConsumerConfiguration;
import io.nats.integration.utils.JetStreamTestBase;
import io.nats.integration.utils.JetStreamTestHelper;
import org.junit.jupiter.api.Test;

import java.io.IOException;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertTrue;

class ConsumerNameInClusterTest extends JetStreamTestBase {

    @Test
    public void testSingleServer() throws Exception {
        runInJsServer(nc -> {
            _testCluster(nc, "conSingle");
        });
    }

    @Test
    public void testCluster() throws Exception {
        runInJsSimpleCluster(runners -> {
            try (Connection nc = standardConnection(runners.get(0).getURI())) {
                _testCluster(nc, "conCluster");
            }
        });
    }

    private static void _testCluster(Connection nc, String conName) throws IOException, JetStreamApiException {
        JetStreamTestHelper h = new JetStreamTestHelper(nc);
        createTestMemoryStream(h);

        PullSubscribeOptions subOpts = ConsumerConfiguration.builder()
            .name(conName)
            .inactiveThreshold(100000)
            .buildPullSubscribeOptions();

        JetStreamSubscription sub = h.js.subscribe(h.subject, subOpts);
        List<String> consumerNames = h.jsm.getConsumerNames(h.streamName);
        assertTrue(consumerNames.contains(conName));
    }
}
